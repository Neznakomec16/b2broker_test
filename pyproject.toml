[tool.poetry]
name = "b2broker-test-task"
version = "0.1.0"
description = ""
authors = ["Neznakomec <vladimirsukko19999@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1.3"
djangorestframework = "^3.15.2"
djangorestframework-jsonapi = "^7.1.0"
gunicorn = "^23.0.0"
pymysql = "^1.1.1"
cryptography = "^43.0.3"
drf-spectacular = "^0.27.2"
drf-spectacular-jsonapi = "^0.5.2"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
ruff = "^0.7.4"
pre-commit = "^4.0.1"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-django = "^4.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py312"
extend-exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "**/migrations",
    ".aws-sam",
]
# Same as Black.
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "I", "N", "D", "A", "C4", "C90"]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "E203", # Whitespace before ':'
    "N818",
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
    "I001",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "G",   # flake8-logging-format
    "I",   # isort
    "N",   # pep8-naming
    "Q",   # flake8-quotes
    "S",   # flake8-bandit
    "T",   # flake8-print
    "W",   # pycodestyle warnings
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "BLE", # flake8-blind-except
    "COM", # flake8-commas
    "DJ",  # flake8-django
    "DTZ", # flake8-datetimez
    "EM",  # flake8-errmsg
    "ERA", # eradicate
    "EXE", # flake8-executable
    "FBT", # flake8-boolean-trap
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "NPY", # NumPy-specific rules
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # Pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "YTT", # flake8-2020
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["D1", "A003", "N806"]
"*/test_utils/**/*.py" = ["N806"]

[tool.black]
extend-exclude = "(migrations|local)"
line-length = 120
target-version = ["py312"]

[tool.pytest.ini_options]
norecursedirs = ["local"]